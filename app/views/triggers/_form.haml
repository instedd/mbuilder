%form{ko(submit: :save)}
  %div.row-fluid
    %div.span6
      %div
        %label{for: :name} Name
        %input{ko(value: :name, valueUpdate: :afterkeydown), type: :text, name: :name, autofocus: true}

      /ko with: logic
      %div
        %label{for: :message} When a message like this
        %textarea{ko(value: :message, valueUpdate: :afterkeydown), type: :text, name: :message}
        %br
        is received from any
        .pill{ko(event: {dragstart: :phoneNumberDragStart}), draggable: 'true'}
          phone number
        %br
        on any date at any time
      %br

      /ko if: actions().length > 0
      %div
        %strong Actions

        /ko foreach: actions
        %div.action
          /ko if: kind == 'select_or_create'
          Select or create
          .pill{ko(text: :tableName)}
          where
          .pill{ko(text: :tableName)}
          \.
          .pill{ko(text: :fieldName)}
          \=
          .pill{ko(text: :bindingName)}
          //ko

          /ko if: kind == 'store_value'
          Store
          .pill{ko(text: :bindingName)}
          as
          .pill{ko(text: :tableName)}
          \.
          .pill{ko(text: :fieldName)}
          //ko
        %br
        //ko
      //ko

      //ko

    %div.span6
      %div
        %strong Tables
      = ko_link_to "New table", :newTable

      %div
        /ko foreach: tables
        %div.logic-table
          %input{ko(value: :name, valueUpdate: :afterkeydown, hasfocus: :hasFocus), type: :text}

          %div
            %strong Fields
          = ko_link_to "New field", :newField

          /ko foreach: fields
          %div
            %input.input-medium{ko(value: :name, valueUpdate: :afterkeydown, hasfocus: :hasFocus, event: {dragover: '$root.logic.dragOverFieldName', drop: '$root.logic.dropOverFieldName'}), type: :text}
            %input.input-medium{ko(value: :value, valueUpdate: :afterkeydown, event: {dragover: '$root.logic.dragOverFieldValue', drop: '$root.logic.dropOverFieldValue'}), type: :text}
          //ko
        %br
        //ko

  %div
    %button.btn{ko(enable: :canSave)} Save

:javascript
  initTrigger(#{trigger.to_json});
