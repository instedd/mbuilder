%div{'ng-app' => 'mbuilder'}
  - angular_templates "shared/angular"
  - angular_templates "triggers/actions"
  - angular_templates "triggers/bindings"
  - angular_templates "triggers/pieces"
  - angular_templates "triggers/pills"
  - angular_templates "triggers/fields"

  %div{'ng-controller' => 'EditTriggerController', 'ng-init' => trigger_to_angular(application, trigger)}
    %div.row-fluid
      %div.span6
        %div
          %label{for: :name} Name
          %input{'ng-model' => 'name', type: :text, name: :name, autofocus: true}

        %div{'ng-controller' => 'TriggerController'}
          %div
            %label{for: :message} When a message like this is received:
            .message-container
              .from
                %strong From:
                .pill.bound{draggable: 'true', dragstart: 'phoneNumberDragStart($event)'}
                  {{from}}
              .message-area{contenteditable: '{{contenteditable}}', 'ng-blur' => 'makeNotEditable($event)', 'ng-mousedown' => 'makeEditable($event)', 'ng-mouseup' => 'parseMessage($event)', 'ng-keydown' => 'handleMessageKey($event)'}
                %span.piece-container{'ng-repeat' => 'piece in pieces', 'ng-include' => true, 'src' => 'pieceTemplateFor(piece.kind)'}<>

            is received from any
            %br
            on any date at any time
          %br

        %div{'ng-controller' => 'ActionsController'}
          %div{'ng-repeat' => 'action in actions'}
            .action
              %a.delete{href: 'javascript:', 'ng-click' => 'deleteAction($index)'} x
              %div(ng-include src='actionTemplateFor(action.kind)')
            %br
          .new-action
            %a{'ng-click' => 'addSendMessageAction()', href: 'javascript:'} [+] Add "Send message" step
          %br

      %div.span6{'ng-controller' => 'TablesController'}
        %div
          %strong Tables
          %br
          %a{'ng-click' => 'newTable()', href: 'javascript:'} (+) New table
        %br

        %div{'ng-repeat' => 'table in tables', 'ng-controller' => 'TableController'}
          %div.logic-table
            %editable-input{'model' => 'table.name', 'editable' => 'table.editable', 'focus' => 'table.focus'}

            %table.table.table-bordered.fields
              %tr
                %td{'ng-repeat' => 'field in table.fields', 'ng-controller' => 'FieldController'}
                  %editable-input{'model' => 'field.name', 'editable' => 'field.editable', 'focus' => 'field.focus', 'dragover' => 'dragOverName', 'drop' => 'dropOverName'}
                %td
                  %a{'ng-click' => 'newField()', href: 'javascript:'} (+) New column

              %tr
                %td{'ng-repeat' => 'field in table.fields', 'ng-controller' => 'FieldController', dragover: 'dragOverValue($event)', drop: 'dropOverValue($event)'}
                  %span(ng-include src='fieldTemplateFor(table.guid, field.guid)')
                %td
          %br

    %button.btn{'ng-click' => 'save()'} Save
