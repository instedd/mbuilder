%div{'ng-app' => 'mbuilder'}
  - angular_templates "triggers/actions"
  - angular_templates "triggers/pieces"

  %div.row-fluid{'ng-controller' => 'EditTriggerController', 'ng-init' => 'tables=[]'}
    %div.span6
      %div{'ng-controller' => 'TriggerController', 'ng-init' => "name=#{trigger.name.to_json};message=#{trigger.logic.message.to_json}"}
        %div
          %label{for: :name} Name
          %input{'ng-model' => 'name', type: :text, name: :name, autofocus: true}

        %div
          %label{for: :message} When a message like this
          .message-area{contenteditable: '{{contenteditable}}', 'ng-click' => 'makeContentEditable($event)', 'ng-blur' => 'makeNotEditable($event)', 'ng-mouseup' => 'parseMessage($event)'}
            %span.pill-container{'ng-repeat' => 'piece in pieces', 'ng-include' => true, 'src' => 'pieceTemplateFor(piece.kind)', 'style' => 'display: inline-block'}<>

          is received from any
          .pill{draggable: 'true', dragstart: 'phoneNumberDragStart($event)'}
            phone number
          %br
          on any date at any time
        %br

      %div{'ng-controller' => 'ActionsController', 'ng-init' => 'actions=[]'}
        %div{'ng-repeat' => 'action in actions'}
          %div.action(ng-include src='actionTemplateFor(action.kind)')
          %br

    %div.span6{'ng-controller' => 'TablesController'}
      %div
        %strong Tables
      %a{'ng-click' => 'newTable()', href: 'javascript:'} New table

      %div{'ng-repeat' => 'table in tables', 'ng-controller' => 'TableController'}
        %div.logic-table
          %input{'ng-model' => 'table.name', type: :text}

          %div
            %strong Fields
          %a{'ng-click' => 'newField()', href: 'javascript:'} New field

          %div{'ng-repeat' => 'field in table.fields', 'ng-controller' => 'FieldController'}
            %div
              %input.input-medium{'ng-model' => 'field.name', dragover: 'dragOverName($event)', drop: 'dropOverName($event)', type: :text}
              %input.input-large{dragover: 'dragOverValue($event)', drop: 'dropOverValue($event)', type: :text, readonly: true, value: 'New value'}
          %br
