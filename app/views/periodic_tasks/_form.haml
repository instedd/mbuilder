%div{'ng-controller' => 'PeriodicTaskController', 'ng-init' => periodic_task_to_angular(application, periodic_task)}
  %div{'ng-controller' => 'TriggerController', 'dragend' => 'dragEnd($event)'}
    %div.row-fluid
      %div.span6
        %div
          %label{for: :name} Trigger name
          %input.n.span12#name{'ng-model' => '$parent.name', type: :text, name: :name, autofocus: true, placeholder: "Give your trigger a name"}
        %br
        %br
        %div
          = form_for [application, periodic_task] do |f|
            .time-picker
              This trigger will run:
              .time-schedule
                = f.select_recurring :rule, [periodic_task.rule], {allow_blank: false}, {'id' => 'scheduleRule'}
              at:
              .bootstrap-timepicker
                %input(type="text" ng-model="$parent.scheduleTime" bs-timepicker data-show-meridian="false" data-show-seconds="true" data-minute-step=1)
              = ActiveSupport::TimeZone.new(application.time_zone).to_s
        .message-container
          .received-at
            %strong Received at:
            .pill.bound{draggable: 'true', dragstart: 'receivedAtDragStart($event)'}
              yyyymmdd
        = render 'shared/triggers/actions'
      = render 'shared/triggers/tables'

    .row-fluid
      .span6
        %button.btn{'ng-click' => 'save()'} Save
        = link_to "Cancel", application_message_triggers_path(application), class: "btn btn-link"

        - if periodic_task.id
          = icon_link_to :'icf-delete', 'Delete this trigger', "/applications/#{application.id}/periodic_tasks/#{periodic_task.id}", {method: :delete, confirm: "Are you sure you want to delete this trigger?", class: "pull-right"}
        - else
          = icon_link_to :'icf-delete', 'Delete this trigger', "/applications/#{application.id}/message_triggers/", { class: "pull-right"}

    = render 'shared/triggers/popups'
